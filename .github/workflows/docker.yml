name: Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  lint-back:
      name: Lint backend code
      runs-on: ubuntu-latest
      env:
        working-directory: .
      steps:
      - uses: actions/checkout@v2
      - name: Install modules
        run: npm ci
        working-directory: ${{env.working-directory}}
      - name: Run ESLint
        run: npm run lint
        working-directory: ${{env.working-directory}}

  lint-front:
    name: Lint frontend code
    runs-on: ubuntu-latest
    env:
      working-directory: ui
    steps:
    - uses: actions/checkout@v2
    - name: Install modules
      run: npm ci
      working-directory: ${{env.working-directory}}
    - name: Run ESLint
      run: npm run lint
      working-directory: ${{env.working-directory}}

  docker-poller:
    name: Build Hydra poller docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/xstoudi/hydra-poller
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            latest
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.poller
